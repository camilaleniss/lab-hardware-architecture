// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/14/2020 16:21:47"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ComputadorBasicoFinal
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ComputadorBasicoFinal_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clkCPU;
reg reset;
// wires                                               
wire [4:0] AddressBus;
wire [7:0] BusInterno;
wire ControlBus;
wire Cout;
wire [15:0] dataBus;
wire NF;
wire [7:0] OperandoA;
wire [7:0] OperandoB;
wire [7:0] OutALU;
wire Ov;
wire [7:0] R0;
wire [7:0] R1;
wire [7:0] R2;
wire [7:0] R3;
wire [7:0] R4;
wire [7:0] R5;
wire ZF;

// assign statements (if any)                          
ComputadorBasicoFinal i1 (
// port map - connection between master ports and signals/registers   
	.AddressBus(AddressBus),
	.BusInterno(BusInterno),
	.clkCPU(clkCPU),
	.ControlBus(ControlBus),
	.Cout(Cout),
	.dataBus(dataBus),
	.NF(NF),
	.OperandoA(OperandoA),
	.OperandoB(OperandoB),
	.OutALU(OutALU),
	.Ov(Ov),
	.R0(R0),
	.R1(R1),
	.R2(R2),
	.R3(R3),
	.R4(R4),
	.R5(R5),
	.reset(reset),
	.ZF(ZF)
);
initial 
begin 
#1000000 $finish;
end 

// clkCPU
always
begin
	clkCPU = 1'b0;
	clkCPU = #10000 1'b1;
	#10000;
end 

// reset
initial
begin
	reset = 1'b0;
end 
endmodule

